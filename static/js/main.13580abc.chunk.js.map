{"version":3,"sources":["components/SearchBar.js","components/SearchResults.js","components/MovieNominations.js","components/Banner.js","App.js","reportWebVitals.js","index.js"],"names":["SearchContainer","styled","div","Search","input","SearchBar","props","useState","movie","setMovieName","handleClick","e","a","preventDefault","axios","get","params","s","then","response","grabMovies","data","catch","error","console","log","onSubmit","type","placeholder","onChange","target","value","MovieContainer","MovieResult","h2","MovieTitle","MovieCard","H3","h3","MovieResults","movies","length","map","Title","Year","size","cursor","color","isDuplicate","isListFull","disabled","onClick","addNomination","NominationContainer","NomResult","RemoveButton","button","MaxNotif","nominations","removeNomination","localStorage","setItem","JSON","stringify","BannerContainer","full","ListFull","Banner","Container","App","setMovies","setNomination","useEffect","savedNoms","getItem","parse","window","addEventListener","movieData","filter","item","isFull","scrollTo","i","Response","SearchResults","MovieNominations","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13580abc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nconst SearchContainer = styled.div`\r\n  color: black !important;\r\n  font-weight: bold;\r\n  text-align: left;\r\n  margin: auto 0px auto 0px;\r\n  width: 50%;\r\n  border: 3px solid none;\r\n  padding: 0px 0px 20px 0px;\r\n  font-family: \"Fira Sans\";\r\n`;\r\nconst Search = styled.input`\r\n  min-width: 75%;\r\n  font-size: 18px;\r\n  border: 2px solid grey;\r\n  padding: 15px 0px 15px 10px;\r\n  &:hover {\r\n    box-shadow: rgba(149, 157, 165, 0.35) 0px 0px 18px;\r\n  }\r\n  transition: 0.3s;\r\n  height: 2.5em;\r\n  border-radius: 4px;\r\n  outline: none;\r\n  background-color: white;\r\n`;\r\n\r\nfunction SearchBar(props) {\r\n  const [movie, setMovieName] = useState(() => {\r\n    return \"\";\r\n  });\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    const url = \"http://www.omdbapi.com/?i=tt3896198&apikey=c8a5475d\";\r\n    await axios\r\n      .get(url, { params: { s: movie } })\r\n      .then((response) => {\r\n        props.grabMovies(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const onChange = (e) => {\r\n    setMovieName(e.target.value);\r\n  };\r\n  return (\r\n    <SearchContainer>\r\n      <form onSubmit={handleClick}>\r\n        <Search\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie...\"\r\n          onChange={onChange}\r\n        />\r\n      </form>\r\n    </SearchContainer>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SiAddthis } from \"react-icons/si\";\r\nconst MovieContainer = styled.div`\r\n  color: black !important;\r\n  background-color: white;\r\n  &:hover {\r\n    box-shadow: rgba(149, 157, 165, 0.35) 0px 0px 34px;\r\n  }\r\n  transition: 0.3s;\r\n  font-weight: bold;\r\n  font-family: \"Fira Sans\";\r\n  text-align: center;\r\n  margin: 10px auto 40px 0px;\r\n  border-radius: 10px;\r\n  float: left;\r\n  width: 48%;\r\n  min-height: 50px;\r\n`;\r\nconst MovieResult = styled.h2`\r\n  color: black !important;\r\n  font-weight: bold;\r\n  font-family: \"Fira Sans\";\r\n  font-size: 20px;\r\n  text-align: center;\r\n  padding: 10px 0px 10px 0px;\r\n`;\r\nconst MovieTitle = styled.div`\r\n  color: black !important;\r\n  font-weight: bold;\r\n  text-align: left;\r\n  margin: 0px auto 0px auto;\r\n  width: 80%;\r\n  padding: 5px 5px 5px 10px;\r\n`;\r\nconst MovieCard = styled.div`\r\n  color: black !important;\r\n  background: white;\r\n  display: flex;\r\n  border: 3px solid lightgrey;\r\n  &:hover {\r\n    box-shadow: rgba(149, 157, 165, 0.35) 0px 0px 18px;\r\n  }\r\n  overflow-wrap: anywhere;\r\n  transition: 0.3s;\r\n  font-weight: bold;\r\n  transition: 0.2s;\r\n  text-align: center;\r\n  margin: 10px auto 20px auto;\r\n  border-radius: 5px;\r\n  max-width: 60%;\r\n  min-width: 50%;\r\n  padding: 10px 10px 10px 0px;\r\n`;\r\nconst H3 = styled.h3`\r\n  font-size: 15px;\r\n  font-weight: normal;\r\n  color: grey;\r\n`;\r\n\r\nfunction MovieResults(props) {\r\n  const addNomination = (movie) => {\r\n    props.addNomination(movie);\r\n  };\r\n  return (\r\n    <MovieContainer>\r\n      <MovieResult> Movie results 🎥</MovieResult>\r\n      {props.movies === \"none\" ? <H3>No results found</H3> : null}\r\n      {props.movies.length === 0 && props.movies !== \"none\" ? (\r\n        <H3>Nothing to show yet</H3>\r\n      ) : null}\r\n      {props.movies != null && props.movies !== \"none\"\r\n        ? props.movies.map((movie) => {\r\n            return (\r\n              <MovieCard>\r\n                <MovieTitle>\r\n                  {movie.Title} ({movie.Year})\r\n                </MovieTitle>\r\n                <SiAddthis\r\n                  size=\"1.5em\"\r\n                  cursor=\"pointer\"\r\n                  color={\r\n                    props.isDuplicate(movie) === true || props.isListFull()\r\n                      ? \"grey\"\r\n                      : \"#181818\"\r\n                  }\r\n                  disabled={props.isDuplicate(movie) || props.isListFull()}\r\n                  onClick={() => addNomination(movie)}\r\n                />\r\n              </MovieCard>\r\n            );\r\n          })\r\n        : null}\r\n    </MovieContainer>\r\n  );\r\n}\r\n\r\nexport default MovieResults;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FaMinus } from \"react-icons/fa\";\r\nconst NominationContainer = styled.div`\r\n  color: black !important;\r\n  background-color: white;\r\n  font-weight: bold;\r\n  font-family: \"Fira Sans\";\r\n  &:hover {\r\n    box-shadow: rgba(149, 157, 165, 0.35) 0px 0px 34px;\r\n  }\r\n  transition: 0.3s;\r\n  margin: 10px 0px 40px auto;\r\n  border-radius: 10px;\r\n  text-align: center;\r\n  float: right;\r\n  width: 48%;\r\n  border: 3px solid none;\r\n`;\r\nconst NomResult = styled.h2`\r\n  color: black !important;\r\n  font-weight: bold;\r\n  font-family: \"Fira Sans\";\r\n  font-size: 20px;\r\n  text-align: center;\r\n  padding: 10px 0px 10px 0px;\r\n`;\r\nconst MovieTitle = styled.div`\r\n  color: white !important;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin: 0px 5px 0px 5px;\r\n  width: 80%;\r\n  padding: 5px 0px 0px 0px;\r\n`;\r\nconst RemoveButton = styled.button`\r\n  color: black !important;\r\n  background-color: #181818;\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n  border: none;\r\n  text-align: center;\r\n  margin: 5px auto 0px auto;\r\n  overflow-wrap: normal;\r\n  min-width: 1.5rem;\r\n  height: 1.5rem;\r\n  cursor: pointer;\r\n  padding: 3px 0px 3px 0px;\r\n`;\r\nconst MovieCard = styled.div`\r\n  color: white !important;\r\n  animation: pop-in 0.5s;\r\n  display: flex;\r\n  background: #50b83c;\r\n  box-shadow: rgba(149, 157, 165, 0.5) 0px 0px 15px;\r\n  border-radius: 5px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin: 10px auto 20px auto;\r\n  max-width: 60%;\r\n  min-width: 50%;\r\n  overflow-wrap: anywhere;\r\n  padding: 10px 10px 10px 10px;\r\n`;\r\nconst MaxNotif = styled.div`\r\n  color: red !important;\r\n  margin: 40px auto 20px auto;\r\n  font-weight: normal;\r\n  font-size: 15px;\r\n`;\r\nconst H3 = styled.h3`\r\n  font-size: 15px;\r\n  font-weight: normal;\r\n  color: grey;\r\n`;\r\n\r\nfunction MovieResults(props) {\r\n  const removeNomination = (movie) => {\r\n    props.removeNomination(movie);\r\n  };\r\n  const saveNominations = () => {\r\n    localStorage.setItem(\"nominations\", JSON.stringify(props.nominations));\r\n  };\r\n  return (\r\n    <NominationContainer>\r\n      <NomResult>Your nominations 🏆</NomResult>\r\n      {props.nominations.length === 0 ? <H3>Nominate some movies!</H3> : null}\r\n      {props.nominations.map((movie) => {\r\n        return (\r\n          <MovieCard>\r\n            <MovieTitle>\r\n              {movie.Title} ({movie.Year})\r\n            </MovieTitle>\r\n            <RemoveButton>\r\n              <FaMinus\r\n                size=\"0.85rem\"\r\n                color=\"white\"\r\n                onClick={() => removeNomination(movie.Title)}\r\n              />\r\n            </RemoveButton>\r\n          </MovieCard>\r\n        );\r\n      })}\r\n      <div>\r\n        {props.isListFull() === true ? (\r\n          <MaxNotif> You can only have a maximum of 5 nominations</MaxNotif>\r\n        ) : null}\r\n        {props.isListFull() === true ? saveNominations() : null}\r\n      </div>\r\n    </NominationContainer>\r\n  );\r\n}\r\n\r\nexport default MovieResults;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst BannerContainer = styled.div`\r\n  color: black !important;\r\n  background-color: ${(props) =>\r\n    props.full === true ? \" #50b83c\" : \"#f0f0f0\"};\r\n  font-weight: bold;\r\n  box-shadow: ${(props) =>\r\n    props.full === true ? \"rgba(149, 157, 165, 0.35) 0px 0px 35px\" : \"none\"};\r\n  font-family: \"Fira Sans\";\r\n  text-align: center;\r\n  margin: 0px auto 10px auto;\r\n  width: 100%;\r\n  border-radius: 4px;\r\n  border: 3px solid none;\r\n  padding-top: ${(props) => (props.full === true ? \"20px\" : \"0px\")};\r\n  padding-bottom: ${(props) => (props.full === true ? \"20px\" : \"0px\")};\r\n`;\r\nconst ListFull = styled.div`\r\n  color: white !important;\r\n  background-color: #50b83c;\r\n  font-weight: bold;\r\n  font-size: 30px;\r\n  font-family: \"Fira Sans\";\r\n  text-align: center;\r\n  margin: auto;\r\n  width: 100%;\r\n  border: 3px solid none;\r\n`;\r\n\r\nfunction Banner(props) {\r\n  return (\r\n    <BannerContainer full={props.isListFull()}>\r\n      {props.isListFull() === true ? (\r\n        <ListFull>Thanks for your input! ✔️</ListFull>\r\n      ) : null}\r\n    </BannerContainer>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import \"./App.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport SearchResults from \"./components/SearchResults\";\r\nimport MovieNominations from \"./components/MovieNominations\";\r\nimport Banner from \"./components/Banner\";\r\n\r\nconst Container = styled.div`\r\n  max-width: 75%;\r\n  min-width: 60%;\r\n  position: relative;\r\n  margin: auto;\r\n`;\r\nconst Title = styled.h2`\r\n  color: black !important;\r\n  font-weight: bold;\r\n  font-family: \"Fira Sans\";\r\n  text-align: left;\r\n  font-size: 45px;\r\n`;\r\n\r\nfunction App() {\r\n  const [movies, setMovies] = useState(() => {\r\n    return [];\r\n  });\r\n  const [nominations, setNomination] = useState(() => {\r\n    return [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    let savedNoms = localStorage.getItem(\"nominations\");\r\n    if (savedNoms) {\r\n      setNomination(JSON.parse(savedNoms));\r\n    }\r\n  }, []);\r\n  window.addEventListener(\"beforeunload\", () => {\r\n    localStorage.setItem(\"nominations\", JSON.stringify(nominations));\r\n  });\r\n  const grabMovies = (movieData) => {\r\n    if (movieData.Response === \"True\") {\r\n      setMovies(movieData.Search);\r\n    } else {\r\n      setMovies(\"none\");\r\n    }\r\n  };\r\n  const addNomination = (movieData) => {\r\n    let isFull = isListFull();\r\n    let duplicate = isDuplicate(movieData);\r\n    if (duplicate === false && isFull === false) {\r\n      setNomination([...nominations, movieData]);\r\n    }\r\n  };\r\n  const removeNomination = async (movieData) => {\r\n    setNomination(nominations.filter((item) => item.Title !== movieData));\r\n  };\r\n  const isListFull = () => {\r\n    let isFull = false;\r\n    if (nominations.length >= 5) {\r\n      isFull = true;\r\n      window.scrollTo(0, 0);\r\n    }\r\n    return isFull;\r\n  };\r\n  const isDuplicate = (movieData) => {\r\n    //let duplicate = false;\r\n    for (var i = 0; i < nominations.length; i++) {\r\n      if (nominations[i] === movieData) {\r\n        console.log(\"is dup ran\");\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  return (\r\n    <Container>\r\n      <Title>The Shoppies 🍿</Title>\r\n      <SearchBar grabMovies={grabMovies} />\r\n      <Banner isListFull={isListFull} />\r\n      <SearchResults\r\n        movies={movies}\r\n        addNomination={addNomination}\r\n        isDuplicate={isDuplicate}\r\n        isListFull={isListFull}\r\n      />\r\n      <MovieNominations\r\n        nominations={nominations}\r\n        removeNomination={removeNomination}\r\n        isListFull={isListFull}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}